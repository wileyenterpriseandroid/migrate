<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <beans:import resource="classpath:spring/applicationContext-storage.xml"/>

    <beans:bean id="plain401BasicAuthenticationEntryPoint"
          class="com.migrate.security.AjaxAwareAuthenticationEntryPoint">
        <beans:property name="realmName" value="com.migrate.security"/>
    </beans:bean>

    <beans:bean id="basicAuthenticationFilter"
                class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter">
        <beans:property name="authenticationManager" ref="authenticationManager"/>
        <beans:property name="authenticationEntryPoint" ref="plain401BasicAuthenticationEntryPoint"/>
    </beans:bean>

    <!--HTTP basic authentication in Spring Security-->
    <http realm="com.migrate.security" entry-point-ref="plain401BasicAuthenticationEntryPoint">
        <intercept-url pattern="/dashboard/**" access="ROLE_USER" />
        <intercept-url pattern="/manage/**" access="ROLE_USER" />
        <intercept-url pattern="/schema/**" access="ROLE_USER" />
        <intercept-url pattern="/classes/**" access="ROLE_USER" />

        <http-basic/>

        <form-login
                login-page="/login.jsp"
                authentication-failure-url="/login.jsp?auth_valid=false"
                default-target-url="/dashboard/dashboard.jsp"
                login-processing-url=""
                always-use-default-target="true"
                />
        <logout logout-success-url="/login.jsp" />
    </http>

    <!--<beans:bean name="migrateOAuthSignatureMethodFactory"-->
                <!--class="com.migrate.security.OAuthSignatureMethodFactory">-->
        <!--<beans:property name="oauthKeyMap" value=""/>-->
    <!--</beans:bean>-->

    <!--<beans:bean name="coreOAuthSignatureMethodFactory"-->
                <!--class="org.springframework.security.oauth.common.signature.CoreOAuthSignatureMethodFactory">-->
        <!--<beans:property name="supportRSA_SHA1" value="true"/>-->
        <!--<beans:property name="supportHMAC_SHA1" value="true"/>-->
    <!--</beans:bean>-->

    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="daoAuthenticationProvider"/>
    </authentication-manager>

    <beans:bean id="userDetailsManager" class="org.springframework.security.provisioning.JdbcUserDetailsManager">
        <beans:property name="dataSource" ref="dataSource"/>
    </beans:bean>

    <beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
        <beans:constructor-arg value="256"/>
        <!-- beefed up security-->
        <beans:property name="iterations" value="1" />
        <!--<beans:property name="iterations" value="1000" />-->
    </beans:bean>

    <beans:bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
        <!--TODO: better to use a uuid?-->
        <beans:property name="userPropertyToUse" value="username" />
    </beans:bean>

    <beans:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <beans:property name="userDetailsService" ref="userDetailsManager"/>
        <!--<beans:property name="userCache" ref="userCache"/>-->
        <!--<beans:property name="passwordEncoder">-->
        <!--<beans:bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>-->
        <!--</beans:property>-->

        <beans:property name="passwordEncoder" ref="passwordEncoder"/>
        <beans:property name="saltSource" ref="saltSource"/>
    </beans:bean>

    <!--TODO: Versioning problem with the user cache-->
    <!--<beans:bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>-->
    <!--<beans:bean id="userCacheBackend" class="org.springframework.cache.ehcache.EhCacheFactoryBean">-->
    <!--<beans:property name="cacheManager" ref="cacheManager"/>-->
    <!--<beans:property name="cacheName" value="userCache"/>-->
    <!--</beans:bean>-->
    <!--<beans:bean id="userCache" class="org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache">-->
    <!--<beans:property name="cache" ref="userCacheBackend"/>-->
    <!--</beans:bean>-->

    <beans:bean id="dataSourcePopulator" class="com.migrate.storage.UserDetailInitializer">
        <beans:constructor-arg ref="dataSource"/>
    </beans:bean>

    <!-- Automatically receives AuthenticationEvent messages -->
    <beans:bean id="loggerListener" class="org.springframework.security.authentication.event.LoggerListener"/>

</beans:beans>
